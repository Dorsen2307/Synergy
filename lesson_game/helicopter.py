import os
from utils import randcell
from utils import clear

# tank - –∑–∞–ø–∞—Å –≤–æ–¥—ã
# mxtank - –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø–∞—Å –≤–æ–¥—ã

class Helicopter:
    def __init__(self, w, h):
        rc = randcell(w, h)
        rx, ry = rc[0], rc[1]
        self.x, self.y = rx, ry
        self.w = w
        self.h = h
        self.tank = 0
        self.mxtank = 1
        self.score = 0
        self.lives = 20

    def move(self, dx, dy):
        """–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤–µ—Ä—Ç–æ–ª–µ—Ç–∞"""
        nx, ny = dx + self.x, dy + self.y
        if 0 <= nx < self.h and 0 <= ny < self.w:
            self.x, self.y = nx, ny

    def print_status(self, ssl):
        """–í—ã–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã"""
        if ssl[0]:
            status = "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ..."
        elif ssl[1]:
            status = "üì§ –ò–≥—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞..."
        else:
            status = ""

        print(f"üíß{self.tank}/{self.mxtank}   "
              f"üèÜ{self.score}   "
              f"‚ù§Ô∏è{self.lives}   "
              f"{status}")

    def first_screen(self):


        print("=" * 40)
        print("|" + " " * 38 + "|")

        print(f"| –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–π:     –õ–µ–≥–µ–Ω–¥–∞:       |")
        print(f"| 'a' - –≤–ª–µ–≤–æ           üü© - –∑–µ–º–ª—è     |")
        print(f"| 'd' - –≤–ø—Ä–∞–≤–æ          üü¶ - –≤–æ–¥–∞      |")
        print(f"| 'w' - –≤–≤–µ—Ä—Ö           ü•¶ - –¥–µ—Ä–µ–≤–æ    |")
        print(f"| 's' - –≤–Ω–∏–∑            üí• - –æ–≥–æ–Ω—å     |")
        print(f"| 'f' - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–≥—Ä—É  üè∞ - –∞–ø–≥—Ä–µ–π–¥   |")
        print(f"| 'g' - –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–≥—Ä—É  üíí - –≥–æ—Å–ø–∏—Ç–∞–ª—å |")

        print("|" + " " * 38 + "|")
        print("=" * 40)

    def game_over(self):
        """–í—ã–≤–æ–¥ –ö–û–ù–ï–¶ –ò–ì–†–´"""
        global helico

        text = f"GAME OVER, YOUR SCORE IS {self.score}"

        clear()

        print("=" * (len(text) + 4))
        print("|" + " " * (len(text) + 2) + "|")
        print(f"| {text} |")
        print("|" + " " * (len(text) + 2) + "|")
        print("=" * (len(text) + 4))

        exit(0)

    def export_data(self):
        """–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤–µ—Ä—Ç–æ–ª–µ—Ç–∞"""
        return {
            "score": self.score,
            "lives": self.lives,
            "x": self.x, "y": self.y,
            "tank": self.tank, "mxtank": self.mxtank,
        }

    def import_data(self, data):
        """–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤–µ—Ä—Ç–æ–ª–µ—Ç–∞"""
        self.x = data["x"] or 0
        self.y = data["y"] or 0
        self.tank = data["tank"] or 0
        self.mxtank = data["mxtank"] or 1
        self.score = data["score"] or 0
        self.lives = data["lives"] or 3